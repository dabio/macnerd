AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app
# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Handler: app.handler
    MemorySize: 128
    Runtime: python3.6
    Timeout: 3
    Tracing: Active

# https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md
Resources:
  VerifyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: verify/
      FunctionName: macnerd-verify
      Events:
        Callback:
          Type: Api
          Properties:
            Path: /topic/{id}
            Method: get
  NotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: notification
      FunctionName: macnerd-notification
      Events:
        Callback:
          Type: Api
          Properties:
            Path: /topic/{id}
            Method: post
  SubscribeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: subscribe/
      FunctionName: macnerd-subscribe
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt Topic.StreamArn
            BatchSize: 10
            StartingPosition: TRIM_HORIZON

  Topic:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: macnerd-topic
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  User:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: macnerd-users
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false

  Client:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: macnerd
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH
      GenerateSecret: true
      UserPoolId: !Ref User

# Output:

#     HelloWorldApi:
#       Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#       Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

#     HelloWorldFunction:
#       Description: "Hello World Lambda Function ARN"
#       Value: !GetAtt HelloWorldFunction.Arn

#     HelloWorldFunctionIamRole:
#       Description: "Implicit IAM Role created for Hello World function"
#       Value: !GetAtt HelloWorldFunctionRole.Arn

